

const bb_productData = {
	product: {name: 'Bổ não QA Gingko Biloba', price: 250000},
	options: {
		active: true,
		opt_01: {quantity: 1, percent: 20.4},
		opt_02: {quantity: 3, percent: 30},
		opt_03: {quantity: 6, percent: 40}
	},
	promotion: {active: true, minQuantity: 2, minOrderCost: 500000, percent: 15},
	shipping: {active: true, baseShipCost: 20000, minOrderCost: 300000, percent: 15}
}

const bb_sellerData = {
	store: {onlineUrl: 'https://bio.linhdan.top/', offlineUrl: 'https://bio.linhdan.top/'},
	address: '24/1/2A2 Chương Dương, Trần Phú, Hải Dương',
	phone: '0857319366',
	// zalo: {note: 'liên hệ qua zalo'},
	zalo: {url01: 'https://zalo.me/', url02: 'https://zaloapp.com/qr/p/z29xq2umx020/'},
	email: function(){const separate = window.location.hostname.split('.'); separate.shift(); return('hello@' + separate.join('.'));},
	website: function(){const separate = window.location.hostname.split('.'); separate.shift(); return(separate.join('.'));}
}


BB_preciousStone();

function BB_preciousStone(){

const bb_productName = document.querySelector('#form-shopping-product > span');
const bb_productPrice = document.querySelector('#form-shopping-price > span');
const bb_productQuantityArea = document.querySelector('#form-shopping-quantity > span');
const bb_billQuantity = bb_productQuantityArea.querySelector('input');
const bb_billTotalCost = document.querySelector('#form-shopping-actualCost > span');
const bb_billPromoCost = document.querySelector('#form-shopping-discount');
const bb_billShipCost = document.querySelector('#form-shopping-shipCost > span');
const bb_billLastTotalCost = document.querySelector('#form-shopping-lastCost > span');

bb_productName.textContent = bb_productData.product.name;
let bb_tempNode = document.createElement('small');
bb_tempNode.innerHTML = `Đơn trên ${BB_numberDotSeparator(bb_productData.shipping.minOrderCost-1000, 0)}<sup>đ</sup> miễn phí vận chuyển, giảm thêm ${bb_productData.shipping.percent}% cho đơn trên ${BB_numberDotSeparator(bb_productData.promotion.minOrderCost-1000, 0)}`;
bb_productName.after(bb_tempNode);
bb_productPrice.innerHTML = BB_numberDotSeparator(bb_productData.product.price, 0) + '<sup>đ</sup>';

BB_priceEstimator(bb_billQuantity.value);


const bb_contactName = document.querySelector('#bb-form-contact-name > input');
const bb_contactPhone = document.querySelector('#bb-form-contact-phone > input');
const bb_contactAddress = document.querySelector('#bb-form-contact-address > input');
const bb_contactMessage = document.querySelector('#bb-form-contact-message > textarea');
const bb_formSubmission = document.querySelector('input.contact-form-button.contact-form-button-submit');
const bb_notification = document.querySelector('p.contact-form-error-message');

// Check name, phone, address
const bb_requiredMatcher = [];

[bb_contactName, bb_contactPhone, bb_contactAddress].forEach((item, index) => {
	item.addEventListener('input', (event) => {
		event.preventDefault();
		let bb_variable;
		// Generate caustion notes
		if(index === 0){
			bb_variable = item.value.length > 0;
			bb_notification.textContent = 'Tên khách hàng đang bị bỏ trống';
		}else if(index === 1){
			bb_variable = item.value.length === 10;
			bb_notification.textContent = 'Số điện thoại chưa đúng (10 số)';
			item.value = item.value.replace(/\D+/g, '');
			item.setAttribute('maxlength', '10');
		}else{
			bb_variable = item.value.length >= 15;
			bb_notification.textContent = 'Thông tin phải chứa 15 ký tự trở lên';
		}
		// Generate caustion color
		if(bb_variable){
			bb_requiredMatcher[index] = 1;
			item.style.cssText = 'background-color: none';
			bb_notification.textContent = '';
		}else{
			bb_requiredMatcher[index] = 0;
			item.style.cssText = 'background-color: #F2CAC8';
		}
		// Once required information mathes true
		const bb_status = bb_requiredMatcher.reduce((product, value) => {return product*value});
		if(bb_status){
			const bb_breaker = '\n\n'+'-'.repeat(50)+'\n\n';
			document.querySelector('textarea.contact-form-email-message').textContent =
				`${bb_productName.textContent}\nSố lượng: ${bb_billQuantity.value} hộp\n` +
				`Phải thu: ${bb_billLastTotalCost.textContent}\nPhí v.chuyển: ${bb_billShipCost.textContent}${bb_breaker}` +
				`Tên khách: ${bb_contactName.value}\nĐiện thoại: ${bb_contactPhone.value}\nĐịa chỉ: ${bb_contactAddress.value}${bb_breaker}` +
				`${bb_contactMessage.value}`;
			document.querySelector('input.contact-form-email').value = 'mail@mail.mail';
			bb_formSubmission.disabled = false;
		}else{
			bb_formSubmission.disabled = true;
		}
	});
});


BB_landingPageDisplayer();


const bb_modal = document.querySelector('#bb-contact-form');
document.querySelectorAll('[data-bb-orderstart]').forEach(function(elem){
	elem.href = 'javascript:void(0)';
	elem.addEventListener('click', (event) => {
		event.preventDefault();
		BB_itemQuantitySelector(elem.dataset.bbOrderstart);
		bb_modal.style.cssText = 'display: flex; position: fixed';
	});
});
document.querySelector('[data-bb-orderclose]').onclick = function(){bb_modal.style.display = 'none'}
window.onclick = function(event) {if(event.target == bb_modal) bb_modal.style.display = 'none'}



/*=============================================
  =            TẠO HÀM CHỨC NĂNG            =
=============================================*/

function BB_priceEstimator(_seekedQuantity){
	let _calculated = parseInt(_seekedQuantity, 10) * bb_productData.product.price;
	let _promoCost = [], _lastTotalCost = 0, _shipCost = 0;

	if(bb_productData.promotion.active){
		if((_seekedQuantity >= bb_productData.promotion.minQuantity) ||
		(_calculated >= bb_productData.promotion.minOrderCost))
			_promoCost.push(_calculated * bb_productData.promotion.percent / 100);
	}

	if(bb_productData.options.active){
		let _percent = Object.values(bb_productData.options).map((value) => {
			if(_seekedQuantity >= value.quantity) return value.percent;
		});
		_percent = _percent.filter(Boolean);
		if(_percent.length) {
			_percent = _percent.reduce((prev, curr) => {return prev > curr ? prev : curr;});
			_promoCost.push(_calculated * _percent / 100);
		}
	};

	if(_promoCost.length){
		_promoCost = _promoCost.reduce((prev, curr) => {return prev.quantity < curr.quantity ? prev : curr;});
		_lastTotalCost = _calculated - _promoCost;
	}else{
		_promoCost = 0;
	}

	if(bb_productData.shipping.active){
		if(_lastTotalCost < bb_productData.shipping.minOrderCost) _shipCost = bb_productData.shipping.baseShipCost;
	}

	bb_billQuantity.value = _seekedQuantity;
	bb_productPrice.innerHTML = `${BB_numberDotSeparator(_lastTotalCost / _seekedQuantity, 1000)}<sup>đ</sup> \
		<s>${BB_numberDotSeparator(bb_productData.product.price, 1000)}<sup>đ</sup></s>`;
	bb_billTotalCost.innerHTML = `${BB_numberDotSeparator(_calculated, 1000)}<sup>đ</sup>`;
	bb_billPromoCost.querySelector('label').innerHTML = `Giảm ${((_promoCost * 100) / _calculated).toFixed(1)}%`;
	bb_billPromoCost.querySelector('span').innerHTML = `-${BB_numberDotSeparator(_promoCost, 1000)}<sup>đ</sup>`;
	bb_billShipCost.innerHTML = `${BB_numberDotSeparator(_shipCost, 1000)}<sup>đ</sup>`;
	bb_billLastTotalCost.innerHTML = `${BB_numberDotSeparator(_lastTotalCost + _shipCost, 1000)}<sup>đ</sup>`;
}


function BB_itemQuantitySelector(_firstQuantity){
	let bb_quantityCounter = parseInt(_firstQuantity, 10);
	if(!bb_quantityCounter) return;
	BB_priceEstimator(bb_quantityCounter);

	bb_productQuantityArea.querySelector('button:nth-last-child(1)').addEventListener('click', (event) => {
		event.preventDefault();
		bb_quantityCounter++;
		BB_priceEstimator(bb_quantityCounter);
	});

	bb_productQuantityArea.querySelector('button:nth-child(1)').addEventListener('click', (event) => {
		event.preventDefault();
		if(bb_quantityCounter > 1){
			bb_quantityCounter--;
			BB_priceEstimator(bb_quantityCounter);
		}
	});

	bb_billQuantity.addEventListener('input', (event) => {
		event.preventDefault();
		bb_billQuantity.value = bb_billQuantity.value.replace(/\D+/g, '');
		BB_priceEstimator(bb_billQuantity.value);
	});
}

// Thêm dấu chắm phân chia hàng nghìn và làm tròn số tới 1000
function BB_numberDotSeparator(_number, _round){
	if(Number.isInteger(_round) && _round > 0) _number = Math.round(_number / _round) * _round;
	return _number.toString().replace(/\B(?=(\d{3})+(?!\d))/g, '.');
}


//////////////////////////////////////////////////


function BB_landingPageContactAdder(){
	const bb_marketPlace = document.querySelector('.footer-marketplace-wrap');
	const bb_contactArea = document.querySelector('.footer-contact-wrap');

	if(!bb_contactArea) return;

	const bb_onlineStore = bb_marketPlace.querySelector('.online');
	const bb_offlineStore = bb_marketPlace.querySelector('.offline');
	const bb_sellerAddress = bb_contactArea.querySelector('.address');
	const bb_sellerPhone = bb_contactArea.querySelector('.phone');
	const bb_sellerZalo = bb_contactArea.querySelector('.zalo');
	const bb_sellerEmail = bb_contactArea.querySelector('.mail');
	const bb_sellerWebsite = bb_contactArea.querySelector('.website');

	[bb_onlineStore, bb_offlineStore, bb_sellerPhone, bb_sellerZalo, bb_sellerEmail, bb_sellerWebsite].forEach((item, index) => {
		item.addEventListener('click', function (event){
			event.preventDefault();
			if(index === 0) window.open(bb_sellerData.store.onlineUrl);
			if(index === 1) window.open(bb_sellerData.store.onlineUrl);
			if(index === 2) window.open('tel:+84' + bb_sellerData.phone);
			if(index === 3) window.open(bb_sellerData.zalo.url01 + bb_sellerData.phone);
			if(index === 4) window.open('mailto:' + bb_sellerData.email());
			if(index === 5) window.open(bb_sellerData.website());
		});
	});

	let bb_tempNode = document.createElement('style');
	bb_tempNode.textContent = `.footer-marketplace-wrap .online::after {content: "Shopee";} \
	.footer-marketplace-wrap .offline::after {content: "Showroom"} \
	.footer-contact-wrap .address::after {content: "${bb_sellerData.address}";} \
	.footer-contact-wrap .phone::after {content: "0${BB_numberDotSeparator(bb_sellerData.phone.substring(1), 0)}";} \
	.footer-contact-wrap .zalo::after {content: "Liên hệ zalo";} \
	.footer-contact-wrap .mail::after {content: "${bb_sellerData.email()}";} \
	.footer-contact-wrap .website::after {content: "${bb_sellerData.website()}"} \
	.footer-contact-wrap .website {display: none}`;
	bb_sellerAddress.before(bb_tempNode);
}

function BB_landingPageComboPrice(){
	const bb_combosArea = document.querySelector('#pricing');
	if(!bb_combosArea) return;

	const bb_infoOptions = Object.values(bb_productData.options);
	[bb_combosArea.querySelector('.regular'), bb_combosArea.querySelector('.popular-plan'),
	bb_combosArea.querySelector('.best-value-plan')].forEach((element, index) => {
		const bb_comboPrice = bb_productData.product.price * (100 - bb_infoOptions[index + 1].percent) / 100;
		element.querySelector('.price').innerHTML = `${BB_numberDotSeparator(bb_comboPrice, 1000)}`;
		element.querySelector('.total').innerHTML = `(Tổng ${BB_numberDotSeparator(
			bb_comboPrice * bb_infoOptions[index + 1].quantity, 1000
		)})`;
		element.querySelector('.save').innerHTML = `Giảm ${BB_numberDotSeparator(bb_infoOptions[index + 1].percent, 1)}%`;
		element.dataset.bbOrderstart = bb_infoOptions[index + 1].quantity;
	});
}


// Hiện mức giá từng combo lên trang chủ (landing page)
function BB_landingPageDisplayer(){
	BB_landingPageContactAdder();
	if(bb_productData.options.active) BB_landingPageComboPrice();
}

}
